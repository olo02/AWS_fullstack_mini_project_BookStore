package team1.service.impl;

/**
 * @author
 * @Since 
 * 
 * 
 */

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import static team1.utils.BookStoreUtils.*;
import team1.service.CustomerService;
import team1.utils.BookStoreUtils;
import team1.vo.Customer;

public class CustomerServiceImpl implements CustomerService {
	private List<Customer> customers = new ArrayList<Customer>();
	private Customer loginUser = null;
	
	
	/**
	 * @author 양찬용
	 * @since 23/02/08
	 * @param register
	 * @return 기능 설명
	 * 회원가입
	 */
	@Override
	public void register() {
		String id = BookStoreUtils.nextLine("id를 입력해주세요");
		if (findById(id) != null) {
			System.err.println("중복된 id입니다");
			return;
			}
		String pw = nextLine("pw를 입력해주세요");
		String name = nextLine("이름을 입력해주세요");
		String email = nextLine("email을 입력해주세요");
		String phone = nextLine("휴대폰 번호를 입력해주세요");
		String address = nextLine("주소를 입력해주세요");
		String level = "001";
		Customer customer = new Customer(id, pw, name, email, phone, address, level);
		customers.add(customer);
		System.out.println("회원가입이 완료되었습니다.");
		
		
		 
		
		
	/**
	* @author 양찬용
	* @since 23/02/08
	* @param findById
	* @return 기능 설명
	* id 조회하기
	*/
		
	}
	@Override
	public Customer findById(String id) {
		Customer customer = null;
		for(int i=0; i<customers.size(); i++) {
			if(customers.get(i).getId() == id) {
				customer = customers.get(i);
				break;
			}
			
		}
		return customer;
	}
	
	/**
	* @author 양찬용
	* @since 23/02/08
	* @param findByPw
	* @return 기능 설명
	* pw 조회하기
	*/
	
	@Override
	public Customer findByPw(String pw) {
		Customer customer = null;
		for(int i=0; i<customers.size(); i++) {
			if(customers.get(i).getPw() == pw) {
				customer = customers.get(i);
				break;
			}
		}
		return customer;
	}
	

	
	/**
	* @author 양찬용
	* @since 23/02/08
	* @param list
	* @return 기능 설명
	* 회원 정보 조회하기
	*/
	void list() {
		Collection<Customer> c = customers;
		System.out.println("이름     email     휴대폰번호     주소");
		System.out.println("=======================================");
		for(Customer cc : c) {
			System.out.println(cc);
		}
	
}

	/**
	* @author 양찬용
	* @since 23/02/08
	* @param modify
	* @return 기능 설명
	* 회원 정보 수정하기
	*/
	@Override
	public void modify() { // 수정하기
		Customer customer = findByPw(nextLine("비밀번호를 입력하세요"));
		if(customer == null) {
			System.out.println("비밀번호가 다릅니다");
			return;
		}
		customer.setName(nextLine("변경할 이름을 입력하세요"));
		customer.setEmail(nextLine("변경할 e-mail을 입력하세요"));
		customer.setPhone(nextLine("변경할 휴대폰번호를 입력하세요"));
		customer.setAddress(nextLine("변경할 주소를 입력하세요"));
		System.out.println("변경이 완료되었습니다.");
	}
		
	/**
	* @author 양찬용
	* @since 23/02/08
	* @param remove
	* @return 기능 설명
	* 회원 탈퇴
	*/	
	@Override
	public void remove() {
		int x = 0;
		x = nextInt("1. 회원탈퇴 2. 메인메뉴로");
		if(x == 1) {
			customers.remove(findByPw(nextLine("비밀번호를 입력하세요")));
			System.out.println("회원 탈퇴가 완료되었습니다");
		}
		else if(x == 2) {
		System.out.println("메인메뉴로 이동합니다");
		}
		
	}
		
	@Override
	public void login() {
		
	}

	
	

}
